services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: vivustore-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "${DB_PORT:-1433}:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - vivustore-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S db -U sa -P 'YourStrong@Passw0rd' -C -Q 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: ViVuStore.API/Dockerfile
    container_name: vivustore-api
    ports:
      - "5176:80"
      # - "5177:443"  # Comment out HTTPS port for now
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__ViVuStoreDbConnection=Server=db;Database=ViVuStoreDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
      - ASPNETCORE_URLS=http://+:80  # Remove HTTPS URL
      - ASPNETCORE_HTTP_PORTS=80
      # Disable HTTPS in development
      - ASPNETCORE_HTTPS_PORT=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - CORs__AllowedOrigins=http://localhost:4200,https://localhost:4200
      - DB_PORT=${DB_PORT:-1433}  # Pass the database port to the API container
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vivustore-network
    restart: unless-stopped

networks:
  vivustore-network:
    name: vivustore-network

volumes:
  sqlserver-data:
    name: vivustore-sqlserver-data
